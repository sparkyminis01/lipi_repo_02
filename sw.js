const CACHE_NAME='cache-trip-tracker-v1.0.0';const urlsToCache=["/","/index.html","/logo-trip-expense-tracker.png","/logo.png","/manifest.json","/robots.txt","/app.js","/appsettings.js","/appstyle.css","/config.js","/crypto-js.min.js","/font-awesome.min.css","/dataset-manager.js","/faq.js","/profile-auth.js","/settings.js","/style.css","/sw.js","/data/checklist_master.min.json","/data/field_options.min.json","/data/keymap.min.json","/data/questions_master.min.json","/data/version.json"];const CRITICAL_SCRIPTS=['/app.js','/profile-auth.js'];self.addEventListener('install',(event)=>{console.log('Service Worker: Installing...');event.waitUntil(caches.open(CACHE_NAME).then((cache)=>{console.log('Service Worker: Caching all assets.');return cache.addAll(urlsToCache);}).then(()=>self.skipWaiting()).catch((error)=>{console.error('Service Worker: Failed to cache all assets:',error);}));});self.addEventListener('activate',(event)=>{console.log('Service Worker: Activating...');event.waitUntil(caches.keys().then((cacheNames)=>{return Promise.all(cacheNames.map((cacheName)=>{if(cacheName!==CACHE_NAME){console.log('Service Worker: Deleting old cache:',cacheName);return caches.delete(cacheName);}}));}).then(()=>self.clients.claim()));});self.addEventListener('fetch',(event)=>{const url=new URL(event.request.url);if(event.request.mode==='navigate'){event.respondWith(caches.match(event.request).then((cachedResponse)=>{if(cachedResponse){return cachedResponse;}
return fetch(event.request).catch(()=>{return caches.match('/index.html');});}));return;}
const isDynamicScript=CRITICAL_SCRIPTS.some(script=>url.pathname.endsWith(script));if(isDynamicScript){event.respondWith(fetch(event.request).then((fetchResponse)=>{if(fetchResponse.status===200&&fetchResponse.type==='basic'){const responseToCache=fetchResponse.clone();caches.open(CACHE_NAME).then((cache)=>{cache.put(event.request,responseToCache);});}
return fetchResponse;}).catch(()=>{console.log(`Service Worker: Network failed, serving cached fallback for ${url.pathname}`);return caches.match(event.request);}));return;}
event.respondWith(caches.match(event.request).then((response)=>{if(response){return response;}
return fetch(event.request).then((fetchResponse)=>{if(!fetchResponse||fetchResponse.status!==200||fetchResponse.type!=='basic'){return fetchResponse;}
const responseToCache=fetchResponse.clone();caches.open(CACHE_NAME).then((cache)=>{cache.put(event.request,responseToCache);});return fetchResponse;}).catch(()=>{});}));});